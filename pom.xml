<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>id.co.jasindocrm.crm</groupId>
    <artifactId>jasindocrm</artifactId>
    <packaging>war</packaging>
    <version>1.0</version>
    <name>CRM Jasindo Application</name>
    <url>http://www.jasindo.co.id</url>

    <prerequisites>
        <maven>2.0.6</maven>
    </prerequisites>

    <licenses>
        <license>
            <name></name>
            <url></url>
        </license>
    </licenses>

    <scm>
        <connection>scm:svn:http://172.16.1.112/svn/JasindoEnhanceSource/CRM/trunk</connection>
        <developerConnection>scm:svn:http://172.16.1.112/svn/JasindoEnhanceSource/CRM/trunk</developerConnection>
        <url>scm:svn:http://172.16.1.112/svn/JasindoEnhanceSource/CRM/trunk</url>
    </scm>

    <issueManagement>
        <system>Bugzilla</system>
        <url>http://dsrepository.balicamp.com/bugzillaCoreJasindo/</url>
    </issueManagement>

    <ciManagement>
        <system>Hudson</system>
        <url>http://172.16.0.25:9000/hudson</url>
    </ciManagement>

    <mailingLists>
        <mailingList>
            <name>Jasindo Development List</name>
            <post>jasindo-dev@balicamp.com</post>
        </mailingList>
    </mailingLists>

    <developers>
        
        <developer>
            <id>afahrudin</id>
            <name>Ami Fahrudin</name>
            <email>afahrudin@balicamp.com</email>
            <organization>BaliCamp</organization>
            <organizationUrl>http://www.balicamp.com</organizationUrl>
            <roles>
                <role>Business Analyst</role>
            </roles>
            <timezone>8</timezone>
        </developer>
       
        <developer>
            <id>sakrom</id>
            <name>Saeful Akrom</name>
            <email>sakrom@balicamp.com</email>
            <organization>BaliCamp</organization>
            <organizationUrl>http://www.balicamp.com</organizationUrl>
            <roles>
                <role>Business Analyst</role>
            </roles>
            <timezone>8</timezone>
        </developer>
       
        <developer>
            <id>dprasetyo</id>
            <name>Dino Prasetyo</name>
            <email>dino.prasetyo@sigma.co.id</email>
            <organization>BaliCamp</organization>
            <organizationUrl>http://www.balicamp.com</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>8</timezone>
        </developer>
      
    </developers>

    <build>
        <defaultGoal>install</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appfuse-maven-plugin</artifactId>
                <version>${appfuse.version}</version>
                <configuration>
                    <genericCore>${amp.genericCore}</genericCore>
                    <fullSource>${amp.fullSource}</fullSource>
                </configuration>
                <!-- Dependency needed by appfuse:gen-model to connect to database. -->
                <!-- See http://issues.appfuse.org/browse/APF-868 to learn more.    -->
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <source>1.5</source>
                    <verbose>true</verbose>
                    <complianceLevel>1.5</complianceLevel>
                    <showWeaveInfo>true</showWeaveInfo>
                    <aspectLibraries>
                        <aspectLibrary>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-aspects</artifactId>
                        </aspectLibrary>
                    </aspectLibraries>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjrt</artifactId>
                        <version>1.6.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjtools</artifactId>
                        <version>1.6.0</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <wtpversion>1.5</wtpversion>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <dependenciesAsLibraries>true</dependenciesAsLibraries>
                    <useFullNames>false</useFullNames>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <components>
                        <component>
                            <name>hbm2ddl</name>
                            <implementation>annotationconfiguration</implementation>
                            <!-- Use 'jpaconfiguration' if you're using JPA. -->
                            <!--<implementation>jpaconfiguration</implementation>-->
                        </component>
                    </components>
                    <componentProperties>
                        <drop>true</drop>
                        <jdk5>true</jdk5>
                        <propertyfile>target/classes/jdbc.properties</propertyfile>
                        <skip>${maven.test.skip}</skip>
                    </componentProperties>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dbunit-maven-plugin</artifactId>
                <version>1.0-beta-1</version>
                <configuration>
                    <dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
                    <driver>${jdbc.driverClassName}</driver>
                    <username>${jdbc.username}</username>
                    <password>${jdbc.password}</password>
                    <url>${jdbc.url}</url>
                    <src>src/test/resources/sample-data.xml</src>
                    <type>${dbunit.operation.type}</type>
                    <schema>${dbunit.schema}</schema>
                    <skip>${maven.test.skip}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>operation</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- Runs before integration tests and jetty:run-war -->
                        <id>test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>operation</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${jdbc.groupId}</groupId>
                        <artifactId>${jdbc.artifactId}</artifactId>
                        <version>${jdbc.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.18</version>
                <configuration>
                    <contextPath>/jasindocrm</contextPath>
                    <scanIntervalSeconds>3</scanIntervalSeconds>
                    <scanTargetPatterns>
                        <scanTargetPattern>
                            <directory>src/main/webapp/WEB-INF</directory>
                            <excludes>
                                <exclude>**/*.jsp</exclude>
                                <exclude>**/*.html</exclude>
                            </excludes>
                            <includes>
                                <include>**/*.page</include>
                                <include>**/*.properties</include>
                                <include>**/*.xml</include>
                                <include>**/*.xmi</include>
                            </includes>
                        </scanTargetPattern>
                    </scanTargetPatterns>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <dependentWarExcludes>
                        **/jdbc.properties,**/hibernate.cfg.xml,**/sql-map-config.xml,**/web.xml,WEB-INF/classes/META-INF/**
                    </dependentWarExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <configuration>
                    <dest>target/classes</dest>
                    <src>src/main/resources</src>
                </configuration>
                <executions>
                    <execution>
                        <id>native2ascii-utf8</id>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF8</encoding>
                            <includes>
                                ApplicationResources_ko.properties,
                                ApplicationResources_no.properties,
                                ApplicationResources_tr.properties,
                                ApplicationResources_zh*.properties
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>native2ascii-8859_1</id>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>8859_1</encoding>
                            <includes>
                                ApplicationResources_de.properties,
                                ApplicationResources_fr.properties,
                                ApplicationResources_nl.properties,
                                ApplicationResources_pt*.properties
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId >org.codehaus.mojo</groupId>
                <artifactId>jasperreports-maven-plugin</artifactId>
                <version>1.0-beta-2</version>
                <executions>
					<execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile-reports</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>jasperreports</groupId>
                        <artifactId>jasperreports</artifactId>
                        <version>${jasperreports.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>jasperreports</groupId>
                        <artifactId>scriptlet</artifactId>
                        <version>${scriptlet.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                        <version>${log4j.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>ApplicationResources_de.properties</exclude>
                    <exclude>ApplicationResources_fr.properties</exclude>
                    <exclude>ApplicationResources_ko.properties</exclude>
                    <exclude>ApplicationResources_nl.properties</exclude>
                    <exclude>ApplicationResources_no.properties</exclude>
                    <exclude>ApplicationResources_pt*.properties</exclude>
                    <exclude>ApplicationResources_tr.properties</exclude>
                    <exclude>ApplicationResources_zh*.properties</exclude>
                    <exclude>applicationContext-resources.xml</exclude>
                </excludes>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>applicationContext-resources.xml</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.js</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </testResource>
        </testResources>
    </build>

    <repositories>
        <repository>
            <id>central</id>
            <url>http://repo1.maven.org/maven2</url>
        </repository>
        <repository>
            <id>appfuse</id>
            <url>http://static.appfuse.org/repository</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>appfuse</id>
            <url>http://static.appfuse.org/repository</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- Dependencies calculated by AppFuse when running full-source plugin -->
    <dependencies>
        <dependency>
            <groupId>org.jbpm</groupId>
            <artifactId>jbpm-jpdl</artifactId>
            <version>${jbpm.version}</version>
        </dependency>
        <dependency>
            <groupId>${jdbc.groupId}</groupId>
            <artifactId>${jdbc.artifactId}</artifactId>
            <version>${jdbc.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>spring-core</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>

        </dependency>
        <dependency>
            <groupId>tapestry</groupId>
            <artifactId>tapestry-flash</artifactId>
            <version>${tapestry.flash.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>tapestry</artifactId>
                    <groupId>tapestry</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>tapestry-annotations</artifactId>
                    <groupId>tapestry</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>tapestry</groupId>
            <artifactId>tapestry-spring</artifactId>
            <version>${tapestry.spring.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>tapestry</artifactId>
                    <groupId>tapestry</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>tapestry-annotations</artifactId>
                    <groupId>tapestry</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${commons.beanutils.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons.dbcp.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>xercesImpl</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${commons.pool.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>${javamail.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${jpa.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
            <version>${ehcache.version}</version>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>clickstream</artifactId>
            <version>${clickstream.version}</version>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>oscache</artifactId>
            <version>${oscache.version}</version>
        </dependency>
        <dependency>
            <groupId>opensymphony</groupId>
            <artifactId>sitemesh</artifactId>
            <version>${sitemesh.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.javacsv</groupId>
            <artifactId>javacsv</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-annotations</artifactId>
            <version>${tapestry.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-contrib</artifactId>
            <version>${tapestry.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectj.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.xfire</groupId>
            <artifactId>xfire-java5</artifactId>
            <version>${xfire.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-attributes-api</artifactId>
                    <groupId>commons-attributes</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jaxen</artifactId>
                    <groupId>jaxen</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xmlParserAPIs</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>xercesImpl</artifactId>
                    <groupId>xerces</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>XmlSchema</artifactId>
                    <groupId>org.apache.ws.commons</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.xfire</groupId>
            <artifactId>xfire-spring</artifactId>
            <version>${xfire.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>spring</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-remoting</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.directwebremoting</groupId>
            <artifactId>dwr</artifactId>
            <version>${dwr.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>${hibernate.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>ehcache</artifactId>
                    <groupId>net.sf.ehcache</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-collections</artifactId>
                    <groupId>commons-collections</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <version>${hibernate.entity.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>${hibernate.annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>${hibernate.annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock</artifactId>
            <version>${jmock.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock-junit4</artifactId>
            <version>${jmock.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core-tiger</artifactId>
            <version>${spring.security.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>spring-core</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-support</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>${spring.security.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>spring-web</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-support</artifactId>
                    <groupId>org.springframework</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.subethamail</groupId>
            <artifactId>subethasmtp-wiser</artifactId>
            <version>${wiser.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
            <version>${urlrewrite.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>ant</artifactId>
                    <groupId>ant</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>struts-menu</groupId>
            <artifactId>struts-menu</artifactId>
            <version>${struts.menu.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>xml-apis</artifactId>
                    <groupId>xml-apis</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${velocity.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.tacos</groupId>
            <artifactId>tacos-core</artifactId>
            <version>${tacos.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>tapestry</artifactId>
                    <groupId>tapestry</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springmodules</groupId>
            <artifactId>spring-modules-jbpm31</artifactId>
            <version>0.8a</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>ehcache</artifactId>
                    <groupId>ehcache</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>jbpm</artifactId>
                    <groupId>jboss</groupId>
                </exclusion>
            </exclusions>
        </dependency>

	    <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>

        <dependency>
            <groupId>jasperreports</groupId>
            <artifactId>scriptlet</artifactId>
            <version>${scriptlet.version}</version>
        </dependency>

        <dependency>
            <groupId>jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>${jasperreports.version}</version>
        </dependency>

        <dependency>
		    <groupId>net.sf.json-lib</groupId>
		    <artifactId>json-lib</artifactId>
		    <version>${json-lib.version}</version>
		</dependency>

        <dependency>
		    <groupId>net.sf.ezmorph</groupId>
		    <artifactId>ezmorph</artifactId>
		    <version>${ezmorph.version}</version>
		</dependency>

        <dependency>
		    <groupId>quartz</groupId>
		    <artifactId>quartz</artifactId>
		    <version>${quartz.version}</version>
		</dependency>

        <dependency>
		    <groupId>net.sourceforge.jexcelapi</groupId>
		    <artifactId>jxl</artifactId>
		    <version>${jxl.version}</version>
		</dependency>

        <dependency>
		    <groupId>com.ibm.ws</groupId>
		    <artifactId>runtime</artifactId>
		    <version>6.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
		    <groupId>com.google.kaptcha</groupId>
		    <artifactId>kaptcha</artifactId>
		    <version>${kaptcha.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-bundle-jaxrs</artifactId>
            <version>${cxf.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-servlet_3.0_spec</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-server</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>id.co.jia</groupId>-->
            <!--<artifactId>jasindows</artifactId>-->
            <!--<version>${jasindows.version}</version>-->
        <!--</dependency>-->

    </dependencies>
    
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-changes-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <linkXref>true</linkXref>
                    <targetJdk>1.5</targetJdk>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>integration-test</id>
            <activation>
                <property>
                    <name>!maven.test.skip</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>0.3</version>
                        <configuration>
                            <wait>${cargo.wait}</wait>
                            <container>
                                <containerId>${cargo.container}</containerId>
                                <!--home>${cargo.container.home}</home-->
                                <zipUrlInstaller>
                                    <url>${cargo.container.url}</url>
                                    <installDir>${installDir}</installDir>
                                </zipUrlInstaller>
                            </container>
                            <configuration>
                                <home>${project.build.directory}/${cargo.container}/container</home>
                                <properties>
                                    <cargo.hostname>${cargo.host}</cargo.hostname>
                                    <cargo.servlet.port>${cargo.port}</cargo.servlet.port>
                                </properties>
                            </configuration>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.1</version>
                        <configuration>
                            <tasks>
                                <taskdef resource="webtest_base_relaxed.taskdef">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <mkdir dir="target/webtest-data"/>
                                <!-- Delete old results file if it exists -->
                                <delete file="target/webtest-data/web-tests-result.xml"/>
                                <!-- This is so the default will be used if no test case is specified -->
                                <property name="test" value="run-all-tests"/>
                                <echo level="info">Testing '${project.build.finalName}' with locale '${user.language}'
                                </echo>
                                <ant antfile="src/test/resources/web-tests.xml" target="${test}">
                                    <property name="user.language" value="${user.language}"/>
                                    <property name="webapp.name" value="${project.build.finalName}"/>
                                    <property name="host" value="${cargo.host}"/>
                                    <property name="port" value="${cargo.port}"/>
                                </ant>
                            </tasks>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.canoo.webtest</groupId>
                                <artifactId>webtest</artifactId>
                                <version>${webtest.version}</version>
                                <!-- groovy-all doesn't have a pom in central repo -->
                                <!-- exclude groovy to prevent trying to fetch pom -->
                                <exclusions>
                                    <exclusion>
                                        <groupId>groovy</groupId>
                                        <artifactId>groovy-all</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>tomcat-maven-plugin</artifactId>
                        <configuration>
                            <port>8181</port>
                            <path>/jasindocrm</path>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- ================= Production Settings Profile ================= -->
        <!-- Use "-P prod" when you want to use the settings in this profile -->
        <!-- =============================================================== -->
        <profile>
            <id>prod</id>
            <build>
                <plugins>
                    <!-- Override location of data file for DbUnit to load (doesn't have negative keys) -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <configuration>
                            <src>src/main/resources/default-data.xml</src>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- ================= Database Profiles ================= -->
        <profile>
            <id>dbcrm</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
                <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <jdbc.groupId>mysql</jdbc.groupId>
                <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
                <jdbc.version>5.0.5</jdbc.version>
                <jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:mysql://172.16.0.25:3306/starcrm?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
                <jdbc.username>starcrm</jdbc.username>
                <jdbc.password></jdbc.password>
                <jdbc.schema>starcrm</jdbc.schema>
                <jndi.jdbc>jdbc/DBCORE</jndi.jdbc>
            </properties>
        </profile>

         <profile>
            <id>dbcrm105</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
                <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <jdbc.groupId>mysql</jdbc.groupId>
                <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
                <jdbc.version>5.0.5</jdbc.version>
                <jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:mysql://172.16.1.105:3306/starcrmtest?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
                <jdbc.username>jasindocrmtest</jdbc.username>
                <jdbc.password>jasindocrmtest</jdbc.password>
                <jdbc.schema>starcrm</jdbc.schema>
                <jndi.jdbc>jdbc/DBCORE</jndi.jdbc>
            </properties>
        </profile>

        <profile>
            <id>dbcrm-prod</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
                <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
                <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
                <jdbc.groupId>mysql</jdbc.groupId>
                <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
                <jdbc.version>5.0.5</jdbc.version>
                <jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:mysql://192.168.54.59:3306/crm_jasindo?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
                <jdbc.username>root</jdbc.username>
                <jdbc.password>wnhxpyrv</jdbc.password>
                <jdbc.schema>starcrm</jdbc.schema>
                <jndi.jdbc>jdbc/DBCORE</jndi.jdbc>
            </properties>
        </profile>
       
        <profile>
            <id>derby</id>
            <properties>
                <hibernate.dialect>org.hibernate.dialect.DerbyDialect</hibernate.dialect>
                <jdbc.groupId>org.apache.derby</jdbc.groupId>
                <jdbc.artifactId>derbyclient</jdbc.artifactId>
                <jdbc.version>10.2.2.0</jdbc.version>
                <jdbc.driverClassName>org.apache.derby.jdbc.ClientDriver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:derby://localhost/jasindo;create=true]]></jdbc.url>
                <jdbc.username>any</jdbc.username>
                <jdbc.password>value</jdbc.password>
            </properties>
        </profile>
        <profile>
            <id>h2</id>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
                <hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
                <jdbc.groupId>com.h2database</jdbc.groupId>
                <jdbc.artifactId>h2</jdbc.artifactId>
                <jdbc.version>1.0.20061217</jdbc.version>
                <jdbc.driverClassName>org.h2.Driver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:h2:${java.io.tmpdir}/jasindo]]></jdbc.url>
                <jdbc.username>sa</jdbc.username>
                <jdbc.password></jdbc.password>
            </properties>
        </profile>
        <profile>
            <id>hsqldb</id>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.ext.hsqldb.HsqldbDataTypeFactory</dbunit.dataTypeFactoryName>
                <hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
                <jdbc.groupId>hsqldb</jdbc.groupId>
                <jdbc.artifactId>hsqldb</jdbc.artifactId>
                <jdbc.version>1.8.0.7</jdbc.version>
                <jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:hsqldb:${java.io.tmpdir}/jasindo;shutdown=true]]></jdbc.url>
                <jdbc.username>sa</jdbc.username>
                <jdbc.password></jdbc.password>
            </properties>
        </profile>
        <profile>
            <id>oracle</id>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.ext.oracle.OracleDataTypeFactory</dbunit.dataTypeFactoryName>
                <dbunit.schema>SYSTEM</dbunit.schema>
                <!-- Make sure to capitalize the schema name -->
                <hibernate.dialect>org.hibernate.dialect.Oracle9Dialect</hibernate.dialect>
                <jdbc.groupId>com.oracle</jdbc.groupId>
                <jdbc.artifactId>ojdbc14</jdbc.artifactId>
                <jdbc.version>10.2.0.2.0</jdbc.version>
                <jdbc.driverClassName>oracle.jdbc.OracleDriver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:oracle:thin:@localhost:1521:XE]]></jdbc.url>
                <jdbc.username>system</jdbc.username>
                <jdbc.password>system</jdbc.password>
            </properties>
        </profile>
        <profile>
            <id>postgresql</id>
            <properties>
                <hibernate.dialect>org.hibernate.dialect.PostgreSQLDialect</hibernate.dialect>
                <jdbc.groupId>postgresql</jdbc.groupId>
                <jdbc.artifactId>postgresql</jdbc.artifactId>
                <jdbc.version>8.1-407.jdbc3</jdbc.version>
                <jdbc.driverClassName>org.postgresql.Driver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:postgresql://localhost/jasindo]]></jdbc.url>
                <jdbc.username>postgres</jdbc.username>
                <jdbc.password>postgres</jdbc.password>
            </properties>
        </profile>
        <profile>
            <!-- You need to enable TCP/IP Connections for SQL Server 2005 after installing. -->
            <!-- http://www.mattwoodward.com/blog/index.cfm?commentID=211 -->
            <id>sqlserver</id>
            <properties>
                <dbunit.dataTypeFactoryName>org.dbunit.ext.mssql.MsSqlDataTypeFactory</dbunit.dataTypeFactoryName>
                <dbunit.operation.type>MSSQL_CLEAN_INSERT</dbunit.operation.type>
                <hibernate.dialect>org.hibernate.dialect.SQLServerDialect</hibernate.dialect>
                <jdbc.groupId>net.sourceforge.jtds</jdbc.groupId>
                <jdbc.artifactId>jtds</jdbc.artifactId>
                <jdbc.version>1.2</jdbc.version>
                <jdbc.driverClassName>net.sourceforge.jtds.jdbc.Driver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:jtds:sqlserver://localhost:3683/jasindo]]></jdbc.url>
                <jdbc.username>sa</jdbc.username>
                <jdbc.password>appfuse</jdbc.password>
            </properties>
        </profile>

        <!-- ================= Container Profiles ================= -->
        <profile>
            <id>jboss</id>
            <properties>
                <cargo.container>jboss4x</cargo.container>
                <cargo.container.home>${env.JBOSS_HOME}</cargo.container.home>
                <cargo.container.url>http://easynews.dl.sourceforge.net/sourceforge/jboss/jboss-4.0.5.GA.zip
                </cargo.container.url>
            </properties>
        </profile>
    </profiles>

    <properties>
        <!-- Application settings -->
        <maven.test.skip>true</maven.test.skip>
        <copyright.year>2011</copyright.year>
        <dao.framework>hibernate</dao.framework>
        <web.framework>tapestry</web.framework>
        <amp.genericCore>true</amp.genericCore>
        <amp.fullSource>true</amp.fullSource>

        <!-- Framework dependency versions -->
        <appfuse.version>2.0.2</appfuse.version>
        <spring.version>2.5.4</spring.version>

        <!-- Testing dependency versions -->
        <jmock.version>2.4.0</jmock.version>
        <jsp.version>2.0</jsp.version>
        <junit.version>4.4</junit.version>
        <servlet.version>2.4</servlet.version>
        <wiser.version>1.2</wiser.version>

        <!-- WebTest dependency versions  -->
        <webtest.version>R_1702</webtest.version>

        <!-- Cargo settings -->
        <cargo.container>tomcat5x</cargo.container>
        <cargo.container.home>${env.CATALINA_HOME}</cargo.container.home>
        <cargo.container.url>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.14/bin/apache-tomcat-6.0.14.zip
        </cargo.container.url>
        <cargo.host>localhost</cargo.host>
        <cargo.port>8080</cargo.port>
        <cargo.wait>false</cargo.wait>

        <!-- Database settings -->
		<dbunit.dataTypeFactoryName>org.dbunit.dataset.datatype.DefaultDataTypeFactory</dbunit.dataTypeFactoryName>
        <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
        <hibernate.dialect>org.hibernate.dialect.MySQL5InnoDBDialect</hibernate.dialect>
        <jdbc.groupId>mysql</jdbc.groupId>
        <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
        <jdbc.version>5.0.5</jdbc.version>
        <jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
        <jdbc.url><![CDATA[jdbc:mysql://localhost/jasindo?createDatabaseIfNotExist=true&amp;useUnicode=true&amp;characterEncoding=utf-8]]></jdbc.url>
        <jdbc.username>root</jdbc.username>
        <jdbc.password>balicamp</jdbc.password>

        <!-- Properties calculated by AppFuse when running full-source plugin -->
        <aspectj.version>1.6.0</aspectj.version>
        <clickstream.version>1.0.2</clickstream.version>
        <commons.beanutils.version>1.7.0</commons.beanutils.version>
        <commons.collections.version>3.2</commons.collections.version>
        <commons.dbcp.version>1.2.2</commons.dbcp.version>
        <commons.lang.version>2.3</commons.lang.version>
        <commons.pool.version>1.4</commons.pool.version>
        <dwr.version>2.0.1</dwr.version>
        <ehcache.version>1.4.1</ehcache.version>
        <hibernate.entity.version>3.2.0.ga</hibernate.entity.version>
        <hibernate.annotations.version>3.3.0.ga</hibernate.annotations.version>
        <hibernate.version>3.2.6.ga</hibernate.version>
        <javamail.version>1.4</javamail.version>
        <jpa.version>1.0</jpa.version>
        <jstl.version>1.1.2</jstl.version>
        <log4j.version>1.2.13</log4j.version>
        <oscache.version>2.3</oscache.version>
        <sitemesh.version>2.2.1</sitemesh.version>
        <spring.security.version>2.0.1</spring.security.version>
        <struts.menu.version>2.4.3</struts.menu.version>
        <tacos.version>4.1.1</tacos.version>
        <tapestry.flash.version>1.0.0</tapestry.flash.version>
        <tapestry.spring.version>1.0.0</tapestry.spring.version>
        <tapestry.version>4.1.6</tapestry.version>
        <urlrewrite.version>3.0.4</urlrewrite.version>
        <velocity.version>1.4</velocity.version>
        <joda.version>1.5.2</joda.version>
        <xfire.version>1.2.6</xfire.version>
        <jbpm.version>3.2.3</jbpm.version>
        <db2jcc_license_cu.version>3.50.152</db2jcc_license_cu.version>
        <poi.version>3.0.2-FINAL</poi.version>
        <scriptlet.version>1.0</scriptlet.version>
        <jasperreports.version>3.1.2</jasperreports.version>
        <json-lib.version>2.2.3</json-lib.version>
        <ezmorph.version>1.0.6</ezmorph.version>
        <quartz.version>1.6.0</quartz.version>
        <jxl.version>2.6.3</jxl.version>
        <cxf.version>2.4.0</cxf.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <jasindows.version>1.0</jasindows.version> 
    </properties>
</project>